<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Interactive Maps</title>
    <style>
        /* Basic styling for the header */
        header {
            background-color: #333;
            padding: 1em;
            text-align: center;
        }
        header a {
            color: white;
            margin: 0 15px;
            text-decoration: none;
            font-weight: bold;
        }
        header a:hover {
            color: #ddd;
        }
        header a.clicked {
            text-decoration: underline; /* Keep underline on clicked link */
            color: #ff6347; /* Optional: Change color for the clicked link */
        }
		
		    /* Remove default margin and padding */
    body, html {
        margin: 0;
        padding: 0;
        width: 100%;
        height: 100%;
        overflow: hidden; /* Prevents scrolling */
    }
    /* Make the iframe fill the viewport */
    iframe {
        width: 100%;
        height: 92.5%;
        border: none; /* Optional: removes border around the iframe */
    }
    </style>
</head>
<body>

<header>
    <a href="status_exp.html" onclick="handleClick(event)">Status of Exploration Areas</a>
    <a href="status_res.html" onclick="handleClick(event)">Status of Reserved Areas</a>
    <a href="interactive.html" style="text-decoration: underline;" onclick="handleClick(event)">Interactive Maps</a>
</header>

<iframe src="https://isa-gis.maps.arcgis.com/apps/webappviewer/index.html?id=2ac9493858a24d1d9e5f6c95a44ba186&extent=-135.1675,49.246,-119.6834,56.8563"></iframe>

<script>
    // Keep track of the currently clicked link
    let previousClickedLink = null;

    function handleClick(event) {
        // Prevent the default browser behavior of navigating to the link immediately
        event.preventDefault();

        // Remove the "clicked" class from the previous link, if any
        if (previousClickedLink) {
            previousClickedLink.classList.remove("clicked");
        }

        // Add the "clicked" class to the current link
        event.currentTarget.classList.add("clicked");

        // Update the previousClickedLink to the current link
        previousClickedLink = event.currentTarget;

        // Navigate to the link's destination
        window.location.href = event.currentTarget.href;
    }
</script>

</body>
</html>